---
- name: Install kubernetes dependencies
  hosts: all
  become: true
  vars_files:
    - vars/config.yml
  tasks:
    - name: Check if swap is enabled
      ansible.builtin.command: swapon --show
      register: swapon_mounts
      changed_when: swapon_mounts.rc != 0

    - name: Disable swap
      when: swapon_mounts.stdout | length > 0
      block:
        - name: Disable swap
          ansible.builtin.command: swapoff -a
          changed_when: true

        - name: Comment out swap entry in fstab
          ansible.builtin.replace:
            path: /etc/fstab
            regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
            replace: '#\1\2\3swap\4'
            backup: true

    - name: Install kublet, kubeadm and kubeclt
      ansible.builtin.apt:
        pkg:
          - kubelet={{ kubernetes_version }}-00
          - kubeadm={{ kubernetes_version }}-00
          - kubectl={{ kubernetes_version }}-00

    # https://kubernetes.io/docs/setup/production-environment/container-runtimes/
    - name: Configure containerd
      block:
        - name: Add OverlayFS module to kernel
          ansible.builtin.command: modprobe overlay
          register: mp_overlay
          changed_when: mp_overlay.rc != 0

        - name: Add bridge netfilter module to kernel
          ansible.builtin.command: modprobe br_netfilter
          register: mp_br_netfilter
          changed_when: mp_br_netfilter.rc != 0

        - name: Persist kernel modules between restarts
          ansible.builtin.template:
            src: templates/modules_load_k8s.conf
            dest: /etc/modules-load.d/k8s.conf
            owner: root
            group: root
            mode: "0600"

        - name: Persist sysctl params across reboots
          ansible.builtin.template:
            src: templates/sysctl_k8s.conf
            dest: /etc/sysctl.d/k8s.conf
            owner: root
            group: root
            mode: "0600"

        - name: Install containerd
          ansible.builtin.apt:
            name: containerd.io
            state: present

        - name: Check if containerd configuration is present
          ansible.builtin.stat:
            path: /etc/containerd/config.toml
          register: containerd_conf

        # - name: Generate containerd configuration
        #   when: not containerd_conf.stat.exists
        #   block:
        #     - name: Save default containerd config
        #       ansible.builtin.command: containerd config default | tee /etc/containerd/config.toml

        # - name: Set systemd as cgroup manager
        #   ansible.builtin.lineinfile:
        #     regexp: '^(\s*)SystemdCgroup = false(.*$)'
        #     line: '\1SystemdCgroup = true\2'
        #     path: /etc/containerd/config.toml
        #     # SystemdCgroup = false
